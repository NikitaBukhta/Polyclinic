/* Description:
 * Sampled Projection: Get a list of patients seen by a specified doctor on a specified date.
 */
SELECT u.id, u.name, u.surname, u.middle_name, u.email
FROM users u
JOIN booked_doctors bd ON u.id = bd.patient_id
JOIN users_roles ur ON bd.doctor_id = ur.user_id
JOIN roles r ON ur.role_id = r.id
WHERE r.name = 'doctor'
    AND bd.doctor_id = 8  -- 8 - requeired doc ID
    AND DATE(bd.appointment_time) = '2024-05-10';


/* Description:
 * Get a list of doctors ranked by the number of patients admitted in the last month.
 */
WITH date_range AS (
    SELECT 
        date_trunc('month', CURRENT_DATE) - interval '1 month' AS last_month_start,
        date_trunc('month', CURRENT_DATE) AS last_month_end
)
SELECT 
    u.id, 
    u.name, 
    u.surname, 
    u.middle_name, 
    u.email, 
    COUNT(bd.patient_id) AS patients_count
FROM users u
JOIN booked_doctors bd ON u.id = bd.doctor_id
JOIN date_range dr ON bd.appointment_time >= dr.last_month_start
                  AND bd.appointment_time < dr.last_month_end
GROUP BY u.id
ORDER BY patients_count DESC;


/* Description:
 * Get a list of patients who have been prescribed medications from the heart disease category.
 */
SELECT DISTINCT u.id, u.name, u.surname, u.middle_name, u.email
FROM users u
JOIN booked_doctors bd ON u.id = bd.patient_id
JOIN doctor_appointments da ON bd.id = da.booked_doctor_id
JOIN prescription_drugs pd ON da.id = pd.doctor_appointment_id
JOIN drugs d ON pd.drug_id = d.id
WHERE LOWER(d.description) LIKE '%серд%';


/* Description:
 * Count the number of patients each physician has seen per appointment during the last month.
 */
WITH date_range AS (
    SELECT 
        date_trunc('month', CURRENT_DATE) - interval '1 month' AS last_month_start,
        date_trunc('month', CURRENT_DATE) AS last_month_end
)
SELECT 
    u.id, 
    u.name, 
    u.surname, 
    u.middle_name, 
    u.email, 
    COUNT(bd.patient_id) AS patients_count
FROM users u
JOIN booked_doctors bd ON u.id = bd.doctor_id
JOIN date_range dr ON bd.appointment_time >= dr.last_month_start
                  AND bd.appointment_time < dr.last_month_end
GROUP BY u.id;


/* Description:
 * Merge: Give a total list of medications and tests that have been prescribed for the specified 
 * patient in the last six months, without repeats, with status.
 */
SELECT analyses.name AS name, 'Анализы' AS type
FROM users
         INNER JOIN booked_doctors ON booked_doctors.patient_id = users.id
         INNER JOIN doctor_appointments ON doctor_appointments.booked_doctor_id = booked_doctors.id
         INNER JOIN analyse_appointments ON analyse_appointments.doctor_appointment_id = doctor_appointments.id
         INNER JOIN analyses ON analyses.id = analyse_appointments.analyse_id
WHERE users.id = 5
  AND booked_doctors.appointment_time >= CURRENT_DATE - INTERVAL '6 months'
UNION
SELECT drugs.name AS name, 'Лекарства' AS type
FROM users
         INNER JOIN booked_doctors ON booked_doctors.patient_id = users.id
         INNER JOIN doctor_appointments ON doctor_appointments.booked_doctor_id = booked_doctors.id
         INNER JOIN prescription_drugs ON prescription_drugs.doctor_appointment_id = doctor_appointments.id
         INNER JOIN drugs ON drugs.id = prescription_drugs.drug_id
WHERE users.id = 5
  AND booked_doctors.appointment_time >= CURRENT_DATE - INTERVAL '6 months';



/* Description:
 * Get the ranking of each doctor based on: 
 *  - the number of patients seen;
 *  - the number of analyses prescribed; 
 *  - the number of drugs prescribed in the last quarter.
 */
WITH patient_count AS (
    SELECT 
        bd.doctor_id,
        COUNT(DISTINCT bd.patient_id) AS patient_count
    FROM 
        booked_doctors bd
    WHERE 
        bd.appointment_time >= date_trunc('quarter', CURRENT_DATE) - interval '3 month'
    GROUP BY 
        bd.doctor_id
),
analyse_count AS (
    SELECT 
        bd.doctor_id,
        COUNT(aa.id) AS analyse_count
    FROM 
        analyse_appointments aa
    JOIN 
        doctor_appointments da ON aa.doctor_appointment_id = da.id
    JOIN 
        booked_doctors bd ON da.booked_doctor_id = bd.id
    WHERE 
        aa.is_completed = TRUE
        AND bd.appointment_time >= date_trunc('quarter', CURRENT_DATE) - interval '3 month'
    GROUP BY 
        bd.doctor_id
),
drug_count AS (
    SELECT 
        bd.doctor_id,
        COUNT(pd.id) AS drug_count
    FROM 
        prescription_drugs pd
    JOIN 
        doctor_appointments da ON pd.doctor_appointment_id = da.id
    JOIN 
        booked_doctors bd ON da.booked_doctor_id = bd.id
    WHERE 
        bd.appointment_time >= date_trunc('quarter', CURRENT_DATE) - interval '3 month'
    GROUP BY 
        bd.doctor_id
),
combined AS (
    SELECT 
        u.id AS doctor_id,
        u.name AS doctor_name,
        u.surname AS doctor_surname,
        u.middle_name AS doctor_middle_name,
        COALESCE(pc.patient_count, 0) AS patient_count,
        COALESCE(ac.analyse_count, 0) AS analyse_count,
        COALESCE(dc.drug_count, 0) AS drug_count
    FROM 
        users u
    LEFT JOIN 
        patient_count pc ON u.id = pc.doctor_id
    LEFT JOIN 
        analyse_count ac ON u.id = ac.doctor_id
    LEFT JOIN 
        drug_count dc ON u.id = dc.doctor_id
    WHERE 
        EXISTS (SELECT 1 FROM users_roles ur WHERE ur.user_id = u.id AND ur.role_id = 2)
)
SELECT 
    doctor_id,
    doctor_name,
    doctor_surname,
    doctor_middle_name,
    patient_count,
    RANK() OVER (ORDER BY patient_count DESC) AS patient_rank,
    analyse_count,
    RANK() OVER (ORDER BY analyse_count DESC) AS analyse_rank,
    drug_count,
    RANK() OVER (ORDER BY drug_count DESC) AS drug_rank
FROM 
    combined
ORDER BY 
    doctor_id;
