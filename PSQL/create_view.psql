/* Descripiton:
 * Create a view displaying the list of diseases for the maximum number of patients of each doctor.
 */
CREATE VIEW max_diseases_per_doctor AS
WITH doctor_patient_disease AS (
    SELECT
        bd.doctor_id,
        da.complaint AS disease,
        COUNT(DISTINCT bd.patient_id) AS patient_count
    FROM
        booked_doctors bd
    JOIN
        doctor_appointments da ON bd.id = da.booked_doctor_id
    GROUP BY
        bd.doctor_id, da.complaint
),
max_patient_disease AS (
    SELECT
        doctor_id,
        disease,
        patient_count,
        ROW_NUMBER() OVER (PARTITION BY doctor_id ORDER BY patient_count DESC, disease) AS rn
    FROM
        doctor_patient_disease
)
SELECT
    d.id AS doctor_id,
    d.name AS doctor_name,
    d.surname AS doctor_surname,
    d.middle_name AS doctor_middle_name,
    m.disease AS most_popular_disease,
    m.patient_count
FROM
    max_patient_disease m
JOIN
    users d ON m.doctor_id = d.id
WHERE
    m.rn = 1;

-- DROP VIEW IF EXISTS max_diseases_per_doctor


/* Description:
 * Create a view to display the trend in the number of doctor visits (by visit dates).
 */
CREATE VIEW doctor_visit_trend AS
WITH daily_visits AS (
    SELECT
        date_trunc('day', bd.appointment_time) AS visit_date,
        COUNT(*) AS daily_visit_count
    FROM
        booked_doctors bd
    GROUP BY
        date_trunc('day', bd.appointment_time)
),
visit_trend AS (
    SELECT
        visit_date,
        daily_visit_count,
        LAG(daily_visit_count) OVER (ORDER BY visit_date) AS previous_daily_visit_count,
        LEAD(daily_visit_count) OVER (ORDER BY visit_date) AS next_daily_visit_count
    FROM
        daily_visits
)
SELECT
    visit_date,
    daily_visit_count,
    COALESCE(daily_visit_count - previous_daily_visit_count, 0) AS difference_with_previous_day,
    COALESCE(next_daily_visit_count - daily_visit_count, 0) AS difference_with_next_day
FROM
    visit_trend
ORDER BY
    visit_date;

-- DROP VIEW IF EXISTS doctor_visit_trend

CREATE OR REPLACE VIEW user_details_view AS
SELECT
    u.id,
    u.name,
    u.surname,
    u.middle_name,
    u.email,
    STRING_AGG(pn.country_code || pn.number, ',') AS phone_numbers,
    r.name AS role
FROM
    users u
LEFT JOIN
    phone_numbers pn ON u.id = pn.user_id
LEFT JOIN
    users_roles ur ON u.id = ur.user_id
LEFT JOIN
    roles r ON ur.role_id = r.id
GROUP BY
    u.id, u.name, u.surname, u.middle_name, u.email, r.name
ORDER BY
    u.surname, u.name;

-- DROP VIEW IF EXISTS user_details_view


SELECT * FROM max_diseases_per_doctor;
SELECT * FROM doctor_visit_trend;
SELECT * FROM user_details_view WHERE email = 'ivan.ivanov1@example.com';